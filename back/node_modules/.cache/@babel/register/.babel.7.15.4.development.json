{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/baraaa/Desktop/Final Project/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/baraaa/Desktop/Final Project/back\",\"filename\":\"/home/baraaa/Desktop/Final Project/back/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/baraaa/Desktop/Final Project/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.4": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/baraaa/Desktop/Final Project/back",
      "filename": "/home/baraaa/Desktop/Final Project/back/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/baraaa/Desktop/Final Project/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFilename": "index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/baraaa/Desktop/Final Project/back/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _controller = _interopRequireDefault(require(\"./auth/controller\"));\n\nvar _filee = _interopRequireDefault(require(\"./filee/filee\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = require('./app');\n\nvar _require = require(\"./config\"),\n    connection = _require.connection;\n\n_controller[\"default\"].auth();\n\n_filee[\"default\"].testCRUD(); // const bcrypt = require(\"bcryptjs\");//password hached\n\n\nvar jwt = require(\"jsonwebtoken\"); // token\n\n\nvar data = require('./createDataBase');\n\ndata.createDataBase();\n\nvar start = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n    return regeneratorRuntime.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            // CREATE users\n            app.post('/user', /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n                var _req$body, firstname, lastname, username, birthdate, address, phonenumber, password, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _req$body = req.body, firstname = _req$body.firstname, lastname = _req$body.lastname, username = _req$body.username, birthdate = _req$body.birthdate, address = _req$body.address, phonenumber = _req$body.phonenumber, password = _req$body.password;\n                        att = \"firstname, lastname, username, birthdate, address, phonenumber, password \";\n                        values = [firstname, lastname, username, birthdate, address, phonenumber, password];\n                        inValues = \"?,?,?,?,?,?,?\";\n\n                        try {\n                          sql = \"INSERT INTO users (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (err) console.log(err);\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2, _x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }()); // GET LIST user\n\n            app.get('/user', /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM users\";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x4, _x5, _x6) {\n                return _ref3.apply(this, arguments);\n              };\n            }()); // READ SINGLE user\n\n            app.get('/user/:id', /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT * FROM users WHERE id = \".concat(id, \" LIMIT 1\");\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result[0]\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x7, _x8, _x9) {\n                return _ref4.apply(this, arguments);\n              };\n            }()); // DELETE user\n\n            app[\"delete\"]('/user/:id', /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM users WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x10, _x11, _x12) {\n                return _ref5.apply(this, arguments);\n              };\n            }()); // UPDATE user\n\n            app.put('/user/:id', function (req, res) {\n              var id = req.params.id;\n              var _req$body2 = req.body,\n                  firstname = _req$body2.firstname,\n                  lastname = _req$body2.lastname,\n                  username = _req$body2.username,\n                  birthdate = _req$body2.birthdate,\n                  address = _req$body2.address,\n                  phonenumber = _req$body2.phonenumber,\n                  password = _req$body2.password;\n              var str = \"\";\n              var values = [];\n\n              if (firstname) {\n                str += \" firstname = ?,\";\n                values.push(firstname);\n              }\n\n              if (lastname) {\n                str += \" lastname = ?,\";\n                values.push(lastname);\n              }\n\n              if (username) {\n                str += \" username = ?,\";\n                values.push(username);\n              }\n\n              if (birthdate) {\n                str += \" birthdate = ?,\";\n                values.push(birthdate);\n              }\n\n              if (address) {\n                str += \" address = ?,\";\n                values.push(address);\n              }\n\n              if (phonenumber) {\n                str += \" phonenumber = ?,\";\n                values.push(phonenumber);\n              }\n\n              if (password) {\n                str += \" password = ?,\";\n                values.push(password);\n              }\n\n              str = str.slice(0, -1);\n              str += \" WHERE id= ?\";\n              values.push(id);\n              var sql = \"UPDATE users SET \".concat(str);\n              connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.send({\n                  success: true,\n                  result: result\n                });\n              });\n            }); // CREATE Post\n\n            app.post('/post', /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res, next) {\n                var _req$body3, image, description, locationaddress, pricestart, isaccepted, bigindate, enddate, isactive, id_user, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _req$body3 = req.body, image = _req$body3.image, description = _req$body3.description, locationaddress = _req$body3.locationaddress, pricestart = _req$body3.pricestart, isaccepted = _req$body3.isaccepted, bigindate = _req$body3.bigindate, enddate = _req$body3.enddate, isactive = _req$body3.isactive, id_user = _req$body3.id_user;\n                        att = \"image, description, locationaddress, pricestart, isaccepted, bigindate, enddate, isactive, id_user \";\n                        values = [image, description, locationaddress, pricestart, isaccepted, bigindate, enddate, isactive, id_user];\n                        inValues = \"?,?,?,?,?,?,?,?,?\";\n\n                        try {\n                          sql = \"INSERT INTO post (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x13, _x14, _x15) {\n                return _ref6.apply(this, arguments);\n              };\n            }()); // GET LIST post\n\n            app.get('/post', /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM post\";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x16, _x17, _x18) {\n                return _ref7.apply(this, arguments);\n              };\n            }()); // READ SINGLE post\n\n            app.get('/post/:id', /*#__PURE__*/function () {\n              var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT * FROM post WHERE id = \".concat(id, \" LIMIT 1\");\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result[0]\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x19, _x20, _x21) {\n                return _ref8.apply(this, arguments);\n              };\n            }()); // get all post that been accepted\n\n            app.get('/postaccepted', /*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        try {\n                          // let sql = `SELECT * FROM post WHERE post.isaccepted = true`;\n                          sql = \"SELECT\\n                post.*,\\n                auction.price,\\n                auction.id_user,\\n                users.firstname\\n                FROM post\\n                LEFT OUTER JOIN auction on auction.id_post = post.id\\n                LEFT JOIN users on users.id = auction.id_user\\n                WHERE post.isaccepted = true\\n                AND auction.price in (\\n                    null,\\n                    (SELECT MAX(price) FROM auction AS a\\n                    WHERE a.id_post = post.id)\\n                   \\n                );\";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x22, _x23, _x24) {\n                return _ref9.apply(this, arguments);\n              };\n            }()); // DELETE post\n\n            app[\"delete\"]('/post/:id', /*#__PURE__*/function () {\n              var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM post WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n\n              return function (_x25, _x26, _x27) {\n                return _ref10.apply(this, arguments);\n              };\n            }()); // UPDATE post\n\n            app.put('/post/:id', function (req, res) {\n              var id = req.params.id;\n              var str = \"\";\n              var values = [];\n              var _req$body4 = req.body,\n                  bigindate = _req$body4.bigindate,\n                  enddate = _req$body4.enddate,\n                  image = _req$body4.image,\n                  description = _req$body4.description,\n                  locationaddress = _req$body4.locationaddress,\n                  pricestart = _req$body4.pricestart,\n                  isaccepted = _req$body4.isaccepted,\n                  isactive = _req$body4.isactive;\n\n              if (image) {\n                str += \" image = ?,\";\n                values.push(image);\n              }\n\n              if (description) {\n                str += \" description = ?,\";\n                values.push(description);\n              }\n\n              if (locationaddress) {\n                str += \" locationaddress = ?,\";\n                values.push(locationaddress);\n              }\n\n              if (pricestart) {\n                str += \" pricestart = ?,\";\n                values.push(pricestart);\n              }\n\n              if (isaccepted) {\n                str += \" isaccepted = ?,\";\n                values.push(isaccepted);\n              }\n\n              if (bigindate) {\n                str += \" bigindate = ?,\";\n                values.push(bigindate);\n              }\n\n              if (enddate) {\n                str += \" enddate = ?,\";\n                values.push(enddate);\n              }\n\n              if (isactive) {\n                str += \" isactive = ?,\";\n                values.push(isactive);\n              }\n\n              str = str.slice(0, -1);\n              str += \" WHERE id= ?\";\n              values.push(id);\n              var sql = \"UPDATE post SET \".concat(str);\n              connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.send({\n                  success: true,\n                  result: result\n                });\n              });\n            }); // CREATE Auction\n\n            app.post('/auction', /*#__PURE__*/function () {\n              var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res, next) {\n                var _req$body5, date, price, id_post, id_user, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _req$body5 = req.body, date = _req$body5.date, price = _req$body5.price, id_post = _req$body5.id_post, id_user = _req$body5.id_user;\n                        att = \" date, price ,id_post,id_user\";\n                        values = [date, price, id_post, id_user];\n                        inValues = \"?,?,?,?\";\n\n                        try {\n                          sql = \"INSERT INTO auction (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              }));\n\n              return function (_x28, _x29, _x30) {\n                return _ref11.apply(this, arguments);\n              };\n            }()); // GET LIST auction\n\n            app.get('/auction', /*#__PURE__*/function () {\n              var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM auction\";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n\n              return function (_x31, _x32, _x33) {\n                return _ref12.apply(this, arguments);\n              };\n            }()); // GET LIST auction\n\n            app.get('/auctionmaxprice/:id', /*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        try {\n                          id = req.params.id;\n                          sql = \"SELECT  max(price) AS maxPrice FROM auction where id_post=\" + id;\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result[0]\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n\n              return function (_x34, _x35, _x36) {\n                return _ref13.apply(this, arguments);\n              };\n            }()); // READ SINGLE auction\n\n            app.get('/auction/:id', /*#__PURE__*/function () {\n              var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT * FROM auction WHERE id = \".concat(id, \" LIMIT 1\");\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result[0]\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13);\n              }));\n\n              return function (_x37, _x38, _x39) {\n                return _ref14.apply(this, arguments);\n              };\n            }()); // DELETE auction\n\n            app[\"delete\"]('/auction/:id', /*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM auction WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14);\n              }));\n\n              return function (_x40, _x41, _x42) {\n                return _ref15.apply(this, arguments);\n              };\n            }()); // UPDATE auction\n\n            app.put('/auction/:id', function (req, res) {\n              var id = req.params.id;\n              var _req$body6 = req.body,\n                  date = _req$body6.date,\n                  price = _req$body6.price;\n              var str = \"\";\n              var values = [];\n\n              if (date) {\n                str += \" date = ?,\";\n                values.push(date);\n              }\n\n              if (price) {\n                str += \" price = ?,\";\n                values.push(price);\n              }\n\n              str = str.slice(0, -1);\n              str += \" WHERE id= ?\";\n              values.push(id);\n              var sql = \"UPDATE auction SET \".concat(str);\n              connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.send({\n                  success: true,\n                  result: result\n                });\n              });\n            }); // CREATE mssg\n\n            app.post('/mssg', /*#__PURE__*/function () {\n              var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res, next) {\n                var _req$body7, title, Email, description, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                  while (1) {\n                    switch (_context15.prev = _context15.next) {\n                      case 0:\n                        _req$body7 = req.body, title = _req$body7.title, Email = _req$body7.Email, description = _req$body7.description;\n                        att = \"title, Email, description \";\n                        values = [title, Email, description];\n                        inValues = \"?,?,?\";\n\n                        try {\n                          sql = \"INSERT INTO mssg (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context15.stop();\n                    }\n                  }\n                }, _callee15);\n              }));\n\n              return function (_x43, _x44, _x45) {\n                return _ref16.apply(this, arguments);\n              };\n            }()); // DELETE mssg\n\n            app[\"delete\"]('/mssg/:id', /*#__PURE__*/function () {\n              var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                  while (1) {\n                    switch (_context16.prev = _context16.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM mssg WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (!result) {\n                              res.json({\n                                error: false\n                              });\n                            }\n\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context16.stop();\n                    }\n                  }\n                }, _callee16);\n              }));\n\n              return function (_x46, _x47, _x48) {\n                return _ref17.apply(this, arguments);\n              };\n            }());\n            app.get('/mssg', /*#__PURE__*/function () {\n              var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                  while (1) {\n                    switch (_context17.prev = _context17.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM mssg\";\n                          connection.query(sql, function (err, result) {\n                            if (!result) {\n                              res.json({\n                                error: false\n                              });\n                            }\n\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context17.stop();\n                    }\n                  }\n                }, _callee17);\n              }));\n\n              return function (_x49, _x50, _x51) {\n                return _ref18.apply(this, arguments);\n              };\n            }()); //JOIN \n\n            app.get('/postdetails/:id', /*#__PURE__*/function () {\n              var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                  while (1) {\n                    switch (_context18.prev = _context18.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT * \\n        FROM users \\n        INNER JOIN post on users.id = post.id_user         \\n        WHERE users.id=\".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context18.stop();\n                    }\n                  }\n                }, _callee18);\n              }));\n\n              return function (_x52, _x53, _x54) {\n                return _ref19.apply(this, arguments);\n              };\n            }());\n            app.get('/auctiondetails', /*#__PURE__*/function () {\n              var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                  while (1) {\n                    switch (_context19.prev = _context19.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT \\n            auction.*,\\n            users.firstname,\\n            users.lastname,\\n            users.username,\\n            users.phonenumber\\n            \\n\\n\\n        FROM auction \\n        INNER JOIN users on users.id = auction.id_user         \\n        INNER JOIN post on post.id = auction.id_post\";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context19.stop();\n                    }\n                  }\n                }, _callee19);\n              }));\n\n              return function (_x55, _x56, _x57) {\n                return _ref20.apply(this, arguments);\n              };\n            }()); //LOGIN\n\n            app.post('/login', /*#__PURE__*/function () {\n              var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(req, res, next) {\n                var _req$body8, username, password, sql_p, log;\n\n                return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                  while (1) {\n                    switch (_context21.prev = _context21.next) {\n                      case 0:\n                        _req$body8 = req.body, username = _req$body8.username, password = _req$body8.password;\n\n                        try {\n                          sql_p = \"SELECT * FROM users\";\n                          log = \"\";\n                          connection.query(sql_p, /*#__PURE__*/function () {\n                            var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(err, datas) {\n                              var user, isMatch, payload, token;\n                              return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                                while (1) {\n                                  switch (_context20.prev = _context20.next) {\n                                    case 0:\n                                      console.log(datas);\n\n                                      if (datas) {\n                                        _context20.next = 4;\n                                        break;\n                                      }\n\n                                      res.json({\n                                        error: false\n                                      });\n                                      return _context20.abrupt(\"return\");\n\n                                    case 4:\n                                      _context20.next = 6;\n                                      return datas.find(function (r) {\n                                        return r.username == username;\n                                      });\n\n                                    case 6:\n                                      user = _context20.sent;\n\n                                      if (user) {\n                                        _context20.next = 10;\n                                        break;\n                                      }\n\n                                      res.json({\n                                        error: false\n                                      });\n                                      return _context20.abrupt(\"return\");\n\n                                    case 10:\n                                      if (!user) {\n                                        _context20.next = 17;\n                                        break;\n                                      }\n\n                                      log = \"UPDATE users SET token = ? WHERE id = ? \";\n                                      isMatch = password == user.password;\n\n                                      if (isMatch) {\n                                        _context20.next = 16;\n                                        break;\n                                      }\n\n                                      res.json({\n                                        error: false\n                                      });\n                                      return _context20.abrupt(\"return\");\n\n                                    case 16:\n                                      if (isMatch) {\n                                        payload = {\n                                          id: user.id\n                                        };\n                                        token = jwt.sign(payload, \"randomString\", {\n                                          expiresIn: 10000\n                                        });\n                                        connection.query(log, [token, user.id], function (err, result) {\n                                          if (!result) {\n                                            res.json({\n                                              error: false\n                                            });\n                                            return;\n                                          }\n\n                                          res.json({\n                                            success: true,\n                                            result: result\n                                          });\n                                        });\n                                      }\n\n                                    case 17:\n                                    case \"end\":\n                                      return _context20.stop();\n                                  }\n                                }\n                              }, _callee20);\n                            }));\n\n                            return function (_x61, _x62) {\n                              return _ref22.apply(this, arguments);\n                            };\n                          }());\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context21.stop();\n                    }\n                  }\n                }, _callee21);\n              }));\n\n              return function (_x58, _x59, _x60) {\n                return _ref21.apply(this, arguments);\n              };\n            }()); //LOGOUT\n\n            app.post('/logout', /*#__PURE__*/function () {\n              var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(req, res, next) {\n                var username, sql_p, log;\n                return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                  while (1) {\n                    switch (_context22.prev = _context22.next) {\n                      case 0:\n                        username = req.body.username;\n\n                        try {\n                          sql_p = \"SELECT * FROM users\";\n                          log = \"\";\n                          connection.query(sql_p, function (err, datas) {\n                            if (err) throw err;\n                            var user = datas.find(function (r) {\n                              return r.username == username;\n                            });\n\n                            if (user) {\n                              log = \"UPDATE users SET token = ? WHERE id = ? \";\n                              connection.query(log, [null, user.id], function (err, result) {\n                                if (err) throw err;\n                                res.json({\n                                  success: true,\n                                  result: result\n                                });\n                              });\n                            }\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context22.stop();\n                    }\n                  }\n                }, _callee22);\n              }));\n\n              return function (_x63, _x64, _x65) {\n                return _ref23.apply(this, arguments);\n              };\n            }());\n\n          case 24:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.get('/', function (req, res) {\n  return res.send(\"ok\");\n});\napp.listen(process.env.PORT || 9000, function () {\n  return console.log('server listening on port 9000');\n});\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "require",
        "connection",
        "auth",
        "filee",
        "testCRUD",
        "jwt",
        "data",
        "createDataBase",
        "start",
        "post",
        "req",
        "res",
        "next",
        "body",
        "firstname",
        "lastname",
        "username",
        "birthdate",
        "address",
        "phonenumber",
        "password",
        "att",
        "values",
        "inValues",
        "sql",
        "query",
        "err",
        "result",
        "console",
        "log",
        "json",
        "success",
        "e",
        "get",
        "id",
        "params",
        "put",
        "str",
        "push",
        "slice",
        "send",
        "image",
        "description",
        "locationaddress",
        "pricestart",
        "isaccepted",
        "bigindate",
        "enddate",
        "isactive",
        "id_user",
        "date",
        "price",
        "id_post",
        "title",
        "Email",
        "error",
        "sql_p",
        "datas",
        "find",
        "r",
        "user",
        "isMatch",
        "payload",
        "token",
        "sign",
        "expiresIn",
        "listen",
        "process",
        "env",
        "PORT"
      ],
      "mappings": "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",
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
      "sourcesContent": [
        "const app = require('./app');\nlet { connection } = require(\"./config\");\n\nimport auth from './auth/controller';\nimport filee from './filee/filee'\nauth.auth();\nfilee.testCRUD();\n\n// const bcrypt = require(\"bcryptjs\");//password hached\nconst jwt = require(\"jsonwebtoken\");// token\n\nconst data = require('./createDataBase');\ndata.createDataBase();\n\nconst start = async () => {\n\n\n    // CREATE users\n    app.post('/user', async (req, res, next) => {\n        const { firstname, lastname, username, birthdate, address, phonenumber, password } = req.body;\n\n        let att = \"firstname, lastname, username, birthdate, address, phonenumber, password \";\n        let values = [firstname, lastname, username, birthdate, address, phonenumber, password];\n        let inValues = \"?,?,?,?,?,?,?\";\n        try {\n            let sql = `INSERT INTO users (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (err) console.log(err);\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    // GET LIST user\n    app.get('/user', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM users`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    // READ SINGLE user\n    app.get('/user/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `SELECT * FROM users WHERE id = ${id} LIMIT 1`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result[0] });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    // DELETE user\n    app.delete('/user/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM users WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    // UPDATE user\n    app.put('/user/:id', (req, res) => {\n        let { id } = req.params;\n        let { firstname, lastname, username, birthdate, address, phonenumber, password } = req.body;\n        let str = \"\";\n        let values = [];\n\n        if (firstname) {\n            str += \" firstname = ?,\";\n            values.push(firstname);\n        }\n        if (lastname) {\n            str += \" lastname = ?,\";\n            values.push(lastname);\n        }\n        if (username) {\n            str += \" username = ?,\";\n            values.push(username);\n        }\n        if (birthdate) {\n            str += \" birthdate = ?,\";\n            values.push(birthdate);\n        }\n\n        if (address) {\n            str += \" address = ?,\";\n            values.push(address);\n        }\n\n        if (phonenumber) {\n            str += \" phonenumber = ?,\";\n            values.push(phonenumber);\n        }\n        if (password) {\n\n\n            str += \" password = ?,\";\n            values.push(password);\n        }\n\n        str = str.slice(0, -1);\n        str += \" WHERE id= ?\"\n        values.push(id);\n\n        let sql = `UPDATE users SET ${str}`;\n        connection.query(sql, values, function (err, result) {\n            if (err) throw err;\n            res.send({ success: true, result });\n        });\n\n\n    });\n\n\n    // CREATE Post\n    app.post('/post', async (req, res, next) => {\n        const { image, description, locationaddress, pricestart, isaccepted, bigindate, enddate, isactive, id_user } = req.body;\n        let att = \"image, description, locationaddress, pricestart, isaccepted, bigindate, enddate, isactive, id_user \";\n        let values = [image, description, locationaddress, pricestart, isaccepted, bigindate, enddate, isactive, id_user];\n        let inValues = \"?,?,?,?,?,?,?,?,?\";\n        try {\n            let sql = `INSERT INTO post (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    // GET LIST post\n    app.get('/post', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM post`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    // READ SINGLE post\n    app.get('/post/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `SELECT * FROM post WHERE id = ${id} LIMIT 1`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result[0] });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    // get all post that been accepted\n    app.get('/postaccepted', async (req, res, next) => {\n\n        try {\n            // let sql = `SELECT * FROM post WHERE post.isaccepted = true`;\n            let sql = `SELECT\n                post.*,\n                auction.price,\n                auction.id_user,\n                users.firstname\n                FROM post\n                LEFT OUTER JOIN auction on auction.id_post = post.id\n                LEFT JOIN users on users.id = auction.id_user\n                WHERE post.isaccepted = true\n                AND auction.price in (\n                    null,\n                    (SELECT MAX(price) FROM auction AS a\n                    WHERE a.id_post = post.id)\n                   \n                );`\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n\n    // DELETE post\n    app.delete('/post/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM post WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n\n    });\n\n    // UPDATE post\n    app.put('/post/:id', (req, res) => {\n\n        let { id } = req.params;\n        let str = \"\";\n        let values = [];\n\n        let {\n            bigindate,\n            enddate,\n            image,\n            description,\n            locationaddress,\n            pricestart,\n            isaccepted,\n            isactive\n        } = req.body;\n\n        if (image) {\n            str += \" image = ?,\";\n            values.push(image);\n        }\n        if (description) {\n            str += \" description = ?,\";\n            values.push(description);\n        }\n        if (locationaddress) {\n            str += \" locationaddress = ?,\";\n            values.push(locationaddress);\n        }\n\n        if (pricestart) {\n            str += \" pricestart = ?,\";\n            values.push(pricestart);\n        }\n        if (isaccepted) {\n            str += \" isaccepted = ?,\";\n            values.push(isaccepted);\n        }\n\n        if (bigindate) {\n            str += \" bigindate = ?,\";\n            values.push(bigindate);\n        }\n        if (enddate) {\n            str += \" enddate = ?,\";\n            values.push(enddate);\n        }\n        if (isactive) {\n            str += \" isactive = ?,\";\n            values.push(isactive);\n        }\n\n        str = str.slice(0, -1);\n        str += \" WHERE id= ?\"\n        values.push(id);\n\n        let sql = `UPDATE post SET ${str}`;\n        connection.query(sql, values, function (err, result) {\n            if (err) throw err;\n            res.send({ success: true, result });\n        });\n    });\n\n\n\n    // CREATE Auction\n    app.post('/auction', async (req, res, next) => {\n\n        const { date, price, id_post, id_user } = req.body;\n        let att = \" date, price ,id_post,id_user\";\n        let values = [date, price, id_post, id_user];\n        let inValues = \"?,?,?,?\";\n\n        try {\n            let sql = `INSERT INTO auction (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n\n\n    });\n\n\n\n    // GET LIST auction\n    app.get('/auction', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM auction`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    // GET LIST auction\n    app.get('/auctionmaxprice/:id', async (req, res, next) => {\n        try {\n            let { id } = req.params;\n            let sql = `SELECT  max(price) AS maxPrice FROM auction where id_post=` + id;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result[0] });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n\n    // READ SINGLE auction\n    app.get('/auction/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `SELECT * FROM auction WHERE id = ${id} LIMIT 1`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result[0] });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    // DELETE auction\n    app.delete('/auction/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM auction WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n\n    });\n\n\n\n    // UPDATE auction\n    app.put('/auction/:id', (req, res) => {\n        let { id } = req.params;\n        let { date, price } = req.body;\n        let str = \"\";\n        let values = [];\n\n        if (date) {\n            str += \" date = ?,\";\n            values.push(date);\n        }\n        if (price) {\n            str += \" price = ?,\";\n            values.push(price);\n        }\n\n        str = str.slice(0, -1);\n        str += \" WHERE id= ?\"\n        values.push(id);\n\n        let sql = `UPDATE auction SET ${str}`;\n        connection.query(sql, values, function (err, result) {\n            if (err) throw err;\n            res.send({ success: true, result });\n        });\n    });\n\n\n\n    // CREATE mssg\n    app.post('/mssg', async (req, res, next) => {\n        const { title, Email, description } = req.body;\n        let att = \"title, Email, description \";\n        let values = [title, Email, description];\n        let inValues = \"?,?,?\";\n        try {\n            let sql = `INSERT INTO mssg (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    // DELETE mssg\n    app.delete('/mssg/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM mssg WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (!result) {\n                    res.json({ error: false })\n                }\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    app.get('/mssg', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM mssg`;\n            connection.query(sql, function (err, result) {\n                if (!result) {\n                    res.json({ error: false })\n                }\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    //JOIN \n    app.get('/postdetails/:id', async (req, res, next) => {\n        let { id } = req.params;\n        try {\n            let sql = `SELECT * \n        FROM users \n        INNER JOIN post on users.id = post.id_user         \n        WHERE users.id=${id}`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    app.get('/auctiondetails', async (req, res, next) => {\n        let { id } = req.params;\n        try {\n            let sql = `SELECT \n            auction.*,\n            users.firstname,\n            users.lastname,\n            users.username,\n            users.phonenumber\n            \n\n\n        FROM auction \n        INNER JOIN users on users.id = auction.id_user         \n        INNER JOIN post on post.id = auction.id_post`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    //LOGIN\n    app.post('/login', async (req, res, next) => {\n        const { username, password } = req.body;\n        try {\n\n            let sql_p = `SELECT * FROM users`;\n            let log = ``;\n\n            connection.query(sql_p, async function (err, datas) {\n                console.log(datas)\n                if (!datas) {\n                    res.json({ error: false });\n                    return;\n                }\n                let user = await datas.find(r => r.username == username);\n\n                if (!user) {\n                    res.json({ error: false });\n                    return;\n                }\n\n                if (user) {\n                    log = `UPDATE users SET token = ? WHERE id = ? `;\n                    let isMatch = (password == user.password)\n\n                    if (!isMatch) {\n                        res.json({ error: false });\n                        return;\n                    }\n                    if (isMatch) {\n                        let payload = { id: user.id };\n                        let token = jwt.sign(payload, \"randomString\", { expiresIn: 10000 });\n\n                        connection.query(log, [token, user.id], function (err, result) {\n                            if (!result) {\n                                res.json({ error: false });\n                                return;\n                            }\n\n                            res.json({ success: true, result });\n                        });\n                    }\n                }\n            });\n\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n\n\n    //LOGOUT\n    app.post('/logout', async (req, res, next) => {\n        const { username } = req.body;\n        try {\n\n            let sql_p = `SELECT * FROM users`;\n            let log = ``;\n\n            connection.query(sql_p, function (err, datas) {\n                if (err) throw err;\n                let user = datas.find(r => r.username == username);\n\n                if (user) {\n                    log = `UPDATE users SET token = ? WHERE id = ? `;\n                    connection.query(log, [null, user.id], function (err, result) {\n                        if (err) throw err;\n                        res.json({ success: true, result });\n                    });\n                }\n            });\n\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n\n\n}\n\napp.get('/', (req, res) => res.send(\"ok\"));\n\napp.listen(process.env.PORT || 9000, () => console.log('server listening on port 9000'));\nstart();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1633253314752
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/baraaa/Desktop/Final Project/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/baraaa/Desktop/Final Project/back\",\"filename\":\"/home/baraaa/Desktop/Final Project/back/src/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/baraaa/Desktop/Final Project/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.4": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/baraaa/Desktop/Final Project/back",
      "filename": "/home/baraaa/Desktop/Final Project/back/src/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/baraaa/Desktop/Final Project/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFilename": "app.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/baraaa/Desktop/Final Project/back/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar cookieParser = require('cookie-parser');\n\nvar session = require('express-session');\n\nvar favicon = require('serve-favicon');\n\nvar cors = require('cors');\n\nvar createError = require('http-errors');\n\nvar path = require('path');\n\nvar bodyParser = require(\"body-parser\");\n\nvar app = express();\nvar IS_PRODUCTION = app.get('env') === 'production';\n\nif (IS_PRODUCTION) {\n  app.set('trust proxy', 1);\n}\n\napp.use(cors());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico')));\napp.use(express[\"static\"](path.join(__dirname, '../public')));\napp.use(session({\n  secret: 'keyboard cat',\n  cookie: {\n    secure: IS_PRODUCTION\n  },\n  resave: true,\n  saveUninitialized: true\n}));\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvb2tpZVBhcnNlciIsInNlc3Npb24iLCJmYXZpY29uIiwiY29ycyIsImNyZWF0ZUVycm9yIiwicGF0aCIsImJvZHlQYXJzZXIiLCJhcHAiLCJJU19QUk9EVUNUSU9OIiwiZ2V0Iiwic2V0IiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsImpvaW4iLCJfX2Rpcm5hbWUiLCJzZWNyZXQiLCJjb29raWUiLCJzZWN1cmUiLCJyZXNhdmUiLCJzYXZlVW5pbml0aWFsaXplZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxlQUFELENBQTVCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLGlCQUFELENBQXZCOztBQUNBLElBQU1HLE9BQU8sR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBdkI7O0FBQ0EsSUFBTUksSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUNBLElBQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTU8sVUFBVSxHQUFHUCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFFQSxJQUFNUSxHQUFHLEdBQUdULE9BQU8sRUFBbkI7QUFFQSxJQUFNVSxhQUFhLEdBQUdELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLEtBQVIsTUFBbUIsWUFBekM7O0FBRUEsSUFBSUQsYUFBSixFQUFtQjtBQUNmRCxFQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSxhQUFSLEVBQXVCLENBQXZCO0FBQ0g7O0FBRURILEdBQUcsQ0FBQ0ksR0FBSixDQUFRUixJQUFJLEVBQVo7QUFDQUksR0FBRyxDQUFDSSxHQUFKLENBQVFMLFVBQVUsQ0FBQ00sVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FOLEdBQUcsQ0FBQ0ksR0FBSixDQUFRTCxVQUFVLENBQUNRLElBQVgsRUFBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUWIsT0FBTyxDQUFDZ0IsSUFBUixFQUFSO0FBQ0FQLEdBQUcsQ0FBQ0ksR0FBSixDQUFRYixPQUFPLENBQUNjLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUjtBQUNBTixHQUFHLENBQUNJLEdBQUosQ0FBUVgsWUFBWSxFQUFwQjtBQUNBTyxHQUFHLENBQUNJLEdBQUosQ0FBUVQsT0FBTyxDQUFDRyxJQUFJLENBQUNVLElBQUwsQ0FBVUMsU0FBVixFQUFxQixXQUFyQixFQUFrQyxhQUFsQyxDQUFELENBQWY7QUFDQVQsR0FBRyxDQUFDSSxHQUFKLENBQVFiLE9BQU8sVUFBUCxDQUFlTyxJQUFJLENBQUNVLElBQUwsQ0FBVUMsU0FBVixFQUFxQixXQUFyQixDQUFmLENBQVI7QUFDQVQsR0FBRyxDQUFDSSxHQUFKLENBQVFWLE9BQU8sQ0FBQztBQUNaZ0IsRUFBQUEsTUFBTSxFQUFFLGNBREk7QUFFWkMsRUFBQUEsTUFBTSxFQUFFO0FBQUVDLElBQUFBLE1BQU0sRUFBRVg7QUFBVixHQUZJO0FBR1pZLEVBQUFBLE1BQU0sRUFBRSxJQUhJO0FBSVpDLEVBQUFBLGlCQUFpQixFQUFFO0FBSlAsQ0FBRCxDQUFmO0FBT0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2JhcmFhYS9EZXNrdG9wL0ZpbmFsIFByb2plY3QvYmFjay9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGNvb2tpZVBhcnNlciA9IHJlcXVpcmUoJ2Nvb2tpZS1wYXJzZXInKTtcbmNvbnN0IHNlc3Npb24gPSByZXF1aXJlKCdleHByZXNzLXNlc3Npb24nKTtcbmNvbnN0IGZhdmljb24gPSByZXF1aXJlKCdzZXJ2ZS1mYXZpY29uJyk7XG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xuY29uc3QgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCdodHRwLWVycm9ycycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKFwiYm9keS1wYXJzZXJcIik7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuY29uc3QgSVNfUFJPRFVDVElPTiA9IGFwcC5nZXQoJ2VudicpID09PSAncHJvZHVjdGlvbic7XG5cbmlmIChJU19QUk9EVUNUSU9OKSB7XG4gICAgYXBwLnNldCgndHJ1c3QgcHJveHknLCAxKVxufVxuXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbmFwcC51c2UoZmF2aWNvbihwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vcHVibGljJywgJ2Zhdmljb24uaWNvJykpKVxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vcHVibGljJykpKTtcbmFwcC51c2Uoc2Vzc2lvbih7XG4gICAgc2VjcmV0OiAna2V5Ym9hcmQgY2F0JyxcbiAgICBjb29raWU6IHsgc2VjdXJlOiBJU19QUk9EVUNUSU9OIH0sXG4gICAgcmVzYXZlOiB0cnVlLFxuICAgIHNhdmVVbmluaXRpYWxpemVkOiB0cnVlXG59KSlcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "cookieParser",
        "session",
        "favicon",
        "cors",
        "createError",
        "path",
        "bodyParser",
        "app",
        "IS_PRODUCTION",
        "get",
        "set",
        "use",
        "urlencoded",
        "extended",
        "json",
        "join",
        "__dirname",
        "secret",
        "cookie",
        "secure",
        "resave",
        "saveUninitialized",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,WAAW,GAAGL,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAMM,IAAI,GAAGN,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMO,UAAU,GAAGP,OAAO,CAAC,aAAD,CAA1B;;AAEA,IAAMQ,GAAG,GAAGT,OAAO,EAAnB;AAEA,IAAMU,aAAa,GAAGD,GAAG,CAACE,GAAJ,CAAQ,KAAR,MAAmB,YAAzC;;AAEA,IAAID,aAAJ,EAAmB;AACfD,EAAAA,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;AACH;;AAEDH,GAAG,CAACI,GAAJ,CAAQR,IAAI,EAAZ;AACAI,GAAG,CAACI,GAAJ,CAAQL,UAAU,CAACM,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAN,GAAG,CAACI,GAAJ,CAAQL,UAAU,CAACQ,IAAX,EAAR;AACAP,GAAG,CAACI,GAAJ,CAAQb,OAAO,CAACgB,IAAR,EAAR;AACAP,GAAG,CAACI,GAAJ,CAAQb,OAAO,CAACc,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAN,GAAG,CAACI,GAAJ,CAAQX,YAAY,EAApB;AACAO,GAAG,CAACI,GAAJ,CAAQT,OAAO,CAACG,IAAI,CAACU,IAAL,CAAUC,SAAV,EAAqB,WAArB,EAAkC,aAAlC,CAAD,CAAf;AACAT,GAAG,CAACI,GAAJ,CAAQb,OAAO,UAAP,CAAeO,IAAI,CAACU,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAT,GAAG,CAACI,GAAJ,CAAQV,OAAO,CAAC;AACZgB,EAAAA,MAAM,EAAE,cADI;AAEZC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAEX;AAAV,GAFI;AAGZY,EAAAA,MAAM,EAAE,IAHI;AAIZC,EAAAA,iBAAiB,EAAE;AAJP,CAAD,CAAf;AAOAC,MAAM,CAACC,OAAP,GAAiBhB,GAAjB",
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
      "sourcesContent": [
        "const express = require('express');\nconst cookieParser = require('cookie-parser');\nconst session = require('express-session');\nconst favicon = require('serve-favicon');\nconst cors = require('cors');\nconst createError = require('http-errors');\nconst path = require('path');\nconst bodyParser = require(\"body-parser\");\n\nconst app = express();\n\nconst IS_PRODUCTION = app.get('env') === 'production';\n\nif (IS_PRODUCTION) {\n    app.set('trust proxy', 1)\n}\n\napp.use(cors());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico')))\napp.use(express.static(path.join(__dirname, '../public')));\napp.use(session({\n    secret: 'keyboard cat',\n    cookie: { secure: IS_PRODUCTION },\n    resave: true,\n    saveUninitialized: true\n}))\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1632150182580
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/baraaa/Desktop/Final Project/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/baraaa/Desktop/Final Project/back\",\"filename\":\"/home/baraaa/Desktop/Final Project/back/src/createDataBase.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/baraaa/Desktop/Final Project/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.4": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/baraaa/Desktop/Final Project/back",
      "filename": "/home/baraaa/Desktop/Final Project/back/src/createDataBase.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/baraaa/Desktop/Final Project/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFilename": "createDataBase.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/baraaa/Desktop/Final Project/back/src/createDataBase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
        "sourceFileName": "createDataBase.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require(\"./config\"),\n    connection = _require.connection;\n\nvar bcrypt = require(\"bcryptjs\");\n\nvar createDataBase = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var users, post, auction, mssg, database;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            users = \"CREATE TABLE IF NOT EXISTS users (\\n        id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n        role INTEGER NOT NULL DEFAULT 0,\\n        firstname TEXT,\\n        lastname TEXT,\\n        username TEXT UNIQUE,\\n        birthdate DATE ,\\n        address TEXT,\\n        phonenumber TEXT , \\n        password VARCHAR(255) NOT NULL UNIQUE,\\n        token TEXT \\n        )\";\n            post = \"CREATE TABLE IF NOT EXISTS post (\\n            id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n            fileSrc TEXT,\\n            description TEXT,\\n            locationaddress TEXT,\\n            pricestart TEXT,\\n            isaccepted TEXT DEFAULT 0,\\n            bigindate DATE,\\n            enddate  DATE,\\n            isactive TEXT DEFAULT 0,\\n            id_user INTEGER NOT NULL,\\n            FOREIGN KEY (id_user) REFERENCES users(id)\\n            )\";\n            auction = \"CREATE TABLE IF NOT EXISTS auction (\\n                id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n                date DATE ,\\n                price  TEXT,\\n                id_post INTEGER NOT NULL,\\n                id_user INTEGER NOT NULL,\\n                FOREIGN KEY (id_post) REFERENCES post(id),\\n                FOREIGN KEY (id_user) REFERENCES users(id)\\n                )\";\n            mssg = \"CREATE TABLE IF NOT EXISTS mssg (\\n                    id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n                    title TEXT,\\n                    Email TEXT,\\n                    description TEXT\\n                   \\n                 \\n                )\";\n            database = [users, post, auction, mssg];\n            database.map(function (sql) {\n              connection.query(sql, function (err, result) {\n                if (err) throw err;\n              });\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createDataBase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  createDataBase: createDataBase\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZURhdGFCYXNlLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25uZWN0aW9uIiwiYmNyeXB0IiwiY3JlYXRlRGF0YUJhc2UiLCJ1c2VycyIsInBvc3QiLCJhdWN0aW9uIiwibXNzZyIsImRhdGFiYXNlIiwibWFwIiwic3FsIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxlQUFxQkEsT0FBTyxDQUFDLFVBQUQsQ0FBNUI7QUFBQSxJQUFNQyxVQUFOLFlBQU1BLFVBQU47O0FBRUEsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFNRyxjQUFjO0FBQUEscUVBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWZDLFlBQUFBLEtBRmU7QUFpQmZDLFlBQUFBLElBakJlO0FBK0JmQyxZQUFBQSxPQS9CZTtBQXlDSEMsWUFBQUEsSUF6Q0c7QUFrRGJDLFlBQUFBLFFBbERhLEdBa0RGLENBQUNKLEtBQUQsRUFBUUMsSUFBUixFQUFjQyxPQUFkLEVBQXVCQyxJQUF2QixDQWxERTtBQW1EbkJDLFlBQUFBLFFBQVEsQ0FBQ0MsR0FBVCxDQUFhLFVBQUFDLEdBQUcsRUFBSTtBQUNoQlQsY0FBQUEsVUFBVSxDQUFDVSxLQUFYLENBQWlCRCxHQUFqQixFQUFzQixVQUFVRSxHQUFWLEVBQWVDLE1BQWYsRUFBdUI7QUFDekMsb0JBQUlELEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1osZUFGRDtBQUdILGFBSkQ7O0FBbkRtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFkVCxjQUFjO0FBQUE7QUFBQTtBQUFBLEdBQXBCOztBQXlEQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVaLEVBQUFBLGNBQWMsRUFBZEE7QUFBRixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9iYXJhYWEvRGVza3RvcC9GaW5hbCBQcm9qZWN0L2JhY2svc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImxldCB7IGNvbm5lY3Rpb24gfSA9IHJlcXVpcmUoXCIuL2NvbmZpZ1wiKTtcblxuY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdGpzXCIpO1xuXG5jb25zdCBjcmVhdGVEYXRhQmFzZSA9IGFzeW5jICgpID0+IHtcblxuICAgIHZhciB1c2VycyA9IGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB1c2VycyAoXG4gICAgICAgIGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT19JTkNSRU1FTlQsXG4gICAgICAgIHJvbGUgSU5URUdFUiBOT1QgTlVMTCBERUZBVUxUIDAsXG4gICAgICAgIGZpcnN0bmFtZSBURVhULFxuICAgICAgICBsYXN0bmFtZSBURVhULFxuICAgICAgICB1c2VybmFtZSBURVhUIFVOSVFVRSxcbiAgICAgICAgYmlydGhkYXRlIERBVEUgLFxuICAgICAgICBhZGRyZXNzIFRFWFQsXG4gICAgICAgIHBob25lbnVtYmVyIFRFWFQgLCBcbiAgICAgICAgcGFzc3dvcmQgVkFSQ0hBUigyNTUpIE5PVCBOVUxMIFVOSVFVRSxcbiAgICAgICAgdG9rZW4gVEVYVCBcbiAgICAgICAgKWA7XG5cblxuXG4gICAgdmFyIHBvc3QgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcG9zdCAoXG4gICAgICAgICAgICBpZCBJTlRFR0VSIFBSSU1BUlkgS0VZIEFVVE9fSU5DUkVNRU5ULFxuICAgICAgICAgICAgZmlsZVNyYyBURVhULFxuICAgICAgICAgICAgZGVzY3JpcHRpb24gVEVYVCxcbiAgICAgICAgICAgIGxvY2F0aW9uYWRkcmVzcyBURVhULFxuICAgICAgICAgICAgcHJpY2VzdGFydCBURVhULFxuICAgICAgICAgICAgaXNhY2NlcHRlZCBURVhUIERFRkFVTFQgMCxcbiAgICAgICAgICAgIGJpZ2luZGF0ZSBEQVRFLFxuICAgICAgICAgICAgZW5kZGF0ZSAgREFURSxcbiAgICAgICAgICAgIGlzYWN0aXZlIFRFWFQgREVGQVVMVCAwLFxuICAgICAgICAgICAgaWRfdXNlciBJTlRFR0VSIE5PVCBOVUxMLFxuICAgICAgICAgICAgRk9SRUlHTiBLRVkgKGlkX3VzZXIpIFJFRkVSRU5DRVMgdXNlcnMoaWQpXG4gICAgICAgICAgICApYDsgXG5cbiAgICB2YXIgYXVjdGlvbiA9IGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBhdWN0aW9uIChcbiAgICAgICAgICAgICAgICBpZCBJTlRFR0VSIFBSSU1BUlkgS0VZIEFVVE9fSU5DUkVNRU5ULFxuICAgICAgICAgICAgICAgIGRhdGUgREFURSAsXG4gICAgICAgICAgICAgICAgcHJpY2UgIFRFWFQsXG4gICAgICAgICAgICAgICAgaWRfcG9zdCBJTlRFR0VSIE5PVCBOVUxMLFxuICAgICAgICAgICAgICAgIGlkX3VzZXIgSU5URUdFUiBOT1QgTlVMTCxcbiAgICAgICAgICAgICAgICBGT1JFSUdOIEtFWSAoaWRfcG9zdCkgUkVGRVJFTkNFUyBwb3N0KGlkKSxcbiAgICAgICAgICAgICAgICBGT1JFSUdOIEtFWSAoaWRfdXNlcikgUkVGRVJFTkNFUyB1c2VycyhpZClcbiAgICAgICAgICAgICAgICApYDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB2YXIgbXNzZyA9IGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBtc3NnIChcbiAgICAgICAgICAgICAgICAgICAgaWQgSU5URUdFUiBQUklNQVJZIEtFWSBBVVRPX0lOQ1JFTUVOVCxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUgVEVYVCxcbiAgICAgICAgICAgICAgICAgICAgRW1haWwgVEVYVCxcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gVEVYVFxuICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICApYDtcblxuICAgIGNvbnN0IGRhdGFiYXNlID0gW3VzZXJzLCBwb3N0LCBhdWN0aW9uLCBtc3NnXVxuICAgIGRhdGFiYXNlLm1hcChzcWwgPT4ge1xuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxubW9kdWxlLmV4cG9ydHMgPSB7IGNyZWF0ZURhdGFCYXNlIH07Il19",
    "map": {
      "version": 3,
      "sources": [
        "createDataBase.js"
      ],
      "names": [
        "require",
        "connection",
        "bcrypt",
        "createDataBase",
        "users",
        "post",
        "auction",
        "mssg",
        "database",
        "map",
        "sql",
        "query",
        "err",
        "result",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,eAAqBA,OAAO,CAAC,UAAD,CAA5B;AAAA,IAAMC,UAAN,YAAMA,UAAN;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMG,cAAc;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,YAAAA,KAFe;AAiBfC,YAAAA,IAjBe;AA+BfC,YAAAA,OA/Be;AAyCHC,YAAAA,IAzCG;AAkDbC,YAAAA,QAlDa,GAkDF,CAACJ,KAAD,EAAQC,IAAR,EAAcC,OAAd,EAAuBC,IAAvB,CAlDE;AAmDnBC,YAAAA,QAAQ,CAACC,GAAT,CAAa,UAAAC,GAAG,EAAI;AAChBT,cAAAA,UAAU,CAACU,KAAX,CAAiBD,GAAjB,EAAsB,UAAUE,GAAV,EAAeC,MAAf,EAAuB;AACzC,oBAAID,GAAJ,EAAS,MAAMA,GAAN;AACZ,eAFD;AAGH,aAJD;;AAnDmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdT,cAAc;AAAA;AAAA;AAAA,GAApB;;AAyDAW,MAAM,CAACC,OAAP,GAAiB;AAAEZ,EAAAA,cAAc,EAAdA;AAAF,CAAjB",
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
      "sourcesContent": [
        "let { connection } = require(\"./config\");\n\nconst bcrypt = require(\"bcryptjs\");\n\nconst createDataBase = async () => {\n\n    var users = `CREATE TABLE IF NOT EXISTS users (\n        id INTEGER PRIMARY KEY AUTO_INCREMENT,\n        role INTEGER NOT NULL DEFAULT 0,\n        firstname TEXT,\n        lastname TEXT,\n        username TEXT UNIQUE,\n        birthdate DATE ,\n        address TEXT,\n        phonenumber TEXT , \n        password VARCHAR(255) NOT NULL UNIQUE,\n        token TEXT \n        )`;\n\n\n\n    var post = `CREATE TABLE IF NOT EXISTS post (\n            id INTEGER PRIMARY KEY AUTO_INCREMENT,\n            fileSrc TEXT,\n            description TEXT,\n            locationaddress TEXT,\n            pricestart TEXT,\n            isaccepted TEXT DEFAULT 0,\n            bigindate DATE,\n            enddate  DATE,\n            isactive TEXT DEFAULT 0,\n            id_user INTEGER NOT NULL,\n            FOREIGN KEY (id_user) REFERENCES users(id)\n            )`; \n\n    var auction = `CREATE TABLE IF NOT EXISTS auction (\n                id INTEGER PRIMARY KEY AUTO_INCREMENT,\n                date DATE ,\n                price  TEXT,\n                id_post INTEGER NOT NULL,\n                id_user INTEGER NOT NULL,\n                FOREIGN KEY (id_post) REFERENCES post(id),\n                FOREIGN KEY (id_user) REFERENCES users(id)\n                )`;\n                \n                var mssg = `CREATE TABLE IF NOT EXISTS mssg (\n                    id INTEGER PRIMARY KEY AUTO_INCREMENT,\n                    title TEXT,\n                    Email TEXT,\n                    description TEXT\n                   \n                 \n                )`;\n\n    const database = [users, post, auction, mssg]\n    database.map(sql => {\n        connection.query(sql, function (err, result) {\n            if (err) throw err;\n        });\n    });\n}\nmodule.exports = { createDataBase };"
      ]
    },
    "sourceType": "script",
    "mtime": 1633282206184
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/baraaa/Desktop/Final Project/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/baraaa/Desktop/Final Project/back\",\"filename\":\"/home/baraaa/Desktop/Final Project/back/src/config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/baraaa/Desktop/Final Project/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.4": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/baraaa/Desktop/Final Project/back",
      "filename": "/home/baraaa/Desktop/Final Project/back/src/config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/baraaa/Desktop/Final Project/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFilename": "config.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/baraaa/Desktop/Final Project/back/src/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
        "sourceFileName": "config.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mysql = require('mysql');\n\nvar connection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: 'Auction'\n});\nconnection.connect(function (err) {\n  if (err) throw err;\n  console.log(\"Connected!\");\n});\nmodule.exports = {\n  connection: connection\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJjb25uZWN0aW9uIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUVBLElBQUlDLFVBQVUsR0FBR0YsS0FBSyxDQUFDRyxnQkFBTixDQUF1QjtBQUNwQ0MsRUFBQUEsSUFBSSxFQUFFLFdBRDhCO0FBRXBDQyxFQUFBQSxJQUFJLEVBQUUsTUFGOEI7QUFHcENDLEVBQUFBLFFBQVEsRUFBRSxFQUgwQjtBQUlwQ0MsRUFBQUEsUUFBUSxFQUFFO0FBSjBCLENBQXZCLENBQWpCO0FBUUFMLFVBQVUsQ0FBQ00sT0FBWCxDQUFtQixVQUFVQyxHQUFWLEVBQWU7QUFDOUIsTUFBSUEsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVEMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNILENBSEQ7QUFLQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVYLEVBQUFBLFVBQVUsRUFBVkE7QUFBRixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9iYXJhYWEvRGVza3RvcC9GaW5hbCBQcm9qZWN0L2JhY2svc3JjLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XG5cbmxldCBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gICAgaG9zdDogXCJsb2NhbGhvc3RcIixcbiAgICB1c2VyOiBcInJvb3RcIixcbiAgICBwYXNzd29yZDogXCJcIixcbiAgICBkYXRhYmFzZTogJ0F1Y3Rpb24nXG59KTtcblxuXG5jb25uZWN0aW9uLmNvbm5lY3QoZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCFcIik7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSB7IGNvbm5lY3Rpb24gfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "mysql",
        "require",
        "connection",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGF,KAAK,CAACG,gBAAN,CAAuB;AACpCC,EAAAA,IAAI,EAAE,WAD8B;AAEpCC,EAAAA,IAAI,EAAE,MAF8B;AAGpCC,EAAAA,QAAQ,EAAE,EAH0B;AAIpCC,EAAAA,QAAQ,EAAE;AAJ0B,CAAvB,CAAjB;AAQAL,UAAU,CAACM,OAAX,CAAmB,UAAUC,GAAV,EAAe;AAC9B,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,CAHD;AAKAC,MAAM,CAACC,OAAP,GAAiB;AAAEX,EAAAA,UAAU,EAAVA;AAAF,CAAjB",
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/",
      "sourcesContent": [
        "var mysql = require('mysql');\n\nlet connection = mysql.createConnection({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"\",\n    database: 'Auction'\n});\n\n\nconnection.connect(function (err) {\n    if (err) throw err;\n    console.log(\"Connected!\");\n});\n\nmodule.exports = { connection }"
      ]
    },
    "sourceType": "script",
    "mtime": 1631455205888
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/baraaa/Desktop/Final Project/back/src/auth/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/baraaa/Desktop/Final Project/back\",\"filename\":\"/home/baraaa/Desktop/Final Project/back/src/auth/controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/baraaa/Desktop/Final Project/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.4": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/auth/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/baraaa/Desktop/Final Project/back",
      "filename": "/home/baraaa/Desktop/Final Project/back/src/auth/controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/baraaa/Desktop/Final Project/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFilename": "controller.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/baraaa/Desktop/Final Project/back/src/auth/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/auth/",
        "sourceFileName": "controller.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar bcrypt = require(\"bcryptjs\"); //npm install bcryptjs --save\n\n\nvar jwt = require(\"jsonwebtoken\");\n\nvar _require = require('../config'),\n    connection = _require.connection;\n\nvar auth = function auth() {\n  var isLoggedIn = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n      var token, decoded, id, statement;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // \n              token = req.body.token;\n              if (!token) next(new Error(\"Auth Error\"));\n\n              try {\n                decoded = jwt.verify(token, \"randomString\");\n                id = req.body.id;\n                if (id != decoded.id) next(new Error(\"Invalid Token1\"));\n                statement = \"SELECT id,username,token FROM users WHERE token=\\\"\".concat(token, \"\\\"\");\n                connection.query(statement, function (err, result) {\n                  if (!result || !result[0].id || result[0].id != id) next(new Error(\"Invalid Token2\"));\n                  req.id = decoded.id;\n                  req.result = result;\n                  next();\n                });\n              } catch (e) {\n                next(new Error(\"Invalid Token3\" + e.message));\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function isLoggedIn(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var signupAction = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // check body data\n              _app[\"default\"].post('/signup', /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, nex) {\n                  var _req$body, firstname, lastname, username, phonenumber, address, birthdate, password, selectStmt;\n\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _req$body = req.body, firstname = _req$body.firstname, lastname = _req$body.lastname, username = _req$body.username, phonenumber = _req$body.phonenumber, address = _req$body.address, birthdate = _req$body.birthdate, password = _req$body.password;\n\n                          if (!(!username || !password)) {\n                            _context3.next = 3;\n                            break;\n                          }\n\n                          throw new Error(\"Email and password are required\");\n\n                        case 3:\n                          _context3.prev = 3;\n                          selectStmt = \"SELECT id, username, password FROM users WHERE username = \\\"\".concat(username, \"\\\"\"); //   let salt = await bcrypt.genSalt(10);\n\n                          connection.query(selectStmt, /*#__PURE__*/function () {\n                            var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(err, result) {\n                              var salt, hashedPassword, insertStmt;\n                              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                                while (1) {\n                                  switch (_context2.prev = _context2.next) {\n                                    case 0:\n                                      if (!(result.length >= 1)) {\n                                        _context2.next = 2;\n                                        break;\n                                      }\n\n                                      throw new Error(\"User already exists\");\n\n                                    case 2:\n                                      _context2.next = 4;\n                                      return bcrypt.genSalt(10);\n\n                                    case 4:\n                                      salt = _context2.sent;\n                                      _context2.next = 7;\n                                      return bcrypt.hash(password, salt);\n\n                                    case 7:\n                                      hashedPassword = _context2.sent;\n                                      insertStmt = 'INSERT INTO users (firstname, lastname, username, phonenumber,address,birthdate, password) VALUES (?,?,?,?,?, ?, ?)';\n                                      connection.query(insertStmt, [firstname, lastname, username, phonenumber, address, birthdate, hashedPassword], function (err, result) {\n                                        var id = result && result.insertId;\n                                        var payload = {\n                                          id: id\n                                        };\n                                        var token = jwt.sign(payload, \"randomString\", {\n                                          expiresIn: 10000\n                                        });\n                                        var obj = {\n                                          'token': token\n                                        };\n                                        var query = 'update users SET ? where id=?';\n                                        connection.query(query, [obj, id], function (err, result) {\n                                          res.send({\n                                            id: id,\n                                            token: token\n                                          });\n                                        });\n                                      });\n\n                                    case 10:\n                                    case \"end\":\n                                      return _context2.stop();\n                                  }\n                                }\n                              }, _callee2);\n                            }));\n\n                            return function (_x7, _x8) {\n                              return _ref4.apply(this, arguments);\n                            };\n                          }());\n                          _context3.next = 11;\n                          break;\n\n                        case 8:\n                          _context3.prev = 8;\n                          _context3.t0 = _context3[\"catch\"](3);\n                          throw new Error(\"couldn't create user \" + _context3.t0.message);\n\n                        case 11:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[3, 8]]);\n                }));\n\n                return function (_x4, _x5, _x6) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function signupAction() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // let id =result && result.id;\n  // let id = result ? result.id : 2;\n\n\n  var loginAction = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _app[\"default\"].post('/login', /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n                  var _req$body2, username, password, statement;\n\n                  return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _req$body2 = req.body, username = _req$body2.username, password = _req$body2.password;\n\n                          if (!(!username || !password)) {\n                            _context6.next = 3;\n                            break;\n                          }\n\n                          throw new Error(\"username and password are required\");\n\n                        case 3:\n                          _context6.prev = 3;\n                          statement = \"SELECT id, username, password FROM users WHERE username = \\\"\".concat(username, \"\\\"\");\n                          connection.query(statement, /*#__PURE__*/function () {\n                            var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(err, result1) {\n                              var isMatch, payload, token, obj, query;\n                              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                                while (1) {\n                                  switch (_context5.prev = _context5.next) {\n                                    case 0:\n                                      if (result1.length === 0) console.log(\"User not found\"); // check the password\n\n                                      _context5.next = 3;\n                                      return bcrypt.compare(password, result1[0].password);\n\n                                    case 3:\n                                      isMatch = _context5.sent;\n\n                                      if (isMatch) {\n                                        _context5.next = 6;\n                                        break;\n                                      }\n\n                                      throw new Error(\"Incorrect Password !\");\n\n                                    case 6:\n                                      // generate token\n                                      payload = {\n                                        id: result1[0].id\n                                      };\n                                      token = jwt.sign(payload, \"randomString\", {\n                                        expiresIn: 10000\n                                      }); // add token to the user\n\n                                      obj = {\n                                        'token': token\n                                      };\n                                      query = 'update users SET ? where id=?';\n                                      connection.query(query, [obj, result1[0].id], function (err, result) {\n                                        res.send({\n                                          id: result1[0].id,\n                                          token: token\n                                        });\n                                      });\n\n                                    case 11:\n                                    case \"end\":\n                                      return _context5.stop();\n                                  }\n                                }\n                              }, _callee5);\n                            }));\n\n                            return function (_x11, _x12) {\n                              return _ref7.apply(this, arguments);\n                            };\n                          }());\n                          _context6.next = 11;\n                          break;\n\n                        case 8:\n                          _context6.prev = 8;\n                          _context6.t0 = _context6[\"catch\"](3);\n                          throw new Error(\"couldn't login user \" + _context6.t0.message);\n\n                        case 11:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6, null, [[3, 8]]);\n                }));\n\n                return function (_x9, _x10) {\n                  return _ref6.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function loginAction() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var logoutAction = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _app[\"default\"].post('/logout', isLoggedIn, function (req, res) {\n                try {\n                  var query = 'UPDATE users SET token = ? WHERE id = ?';\n                  var obj = {\n                    'token': null\n                  };\n                  var id = req.id;\n                  connection.query(query, [obj, id], function (err, result) {\n                    res.send(\"logged out successfully\");\n                  });\n                } catch (e) {\n                  throw new Error(\"couldn't logout user \" + e.message);\n                }\n              });\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function logoutAction() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  signupAction();\n  loginAction();\n  logoutAction();\n};\n\nmodule.exports = {\n  auth: auth\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "bcrypt",
        "require",
        "jwt",
        "connection",
        "auth",
        "isLoggedIn",
        "req",
        "res",
        "next",
        "token",
        "body",
        "Error",
        "decoded",
        "verify",
        "id",
        "statement",
        "query",
        "err",
        "result",
        "e",
        "message",
        "signupAction",
        "app",
        "post",
        "nex",
        "firstname",
        "lastname",
        "username",
        "phonenumber",
        "address",
        "birthdate",
        "password",
        "selectStmt",
        "length",
        "genSalt",
        "salt",
        "hash",
        "hashedPassword",
        "insertStmt",
        "insertId",
        "payload",
        "sign",
        "expiresIn",
        "obj",
        "send",
        "loginAction",
        "result1",
        "console",
        "log",
        "compare",
        "isMatch",
        "logoutAction",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/auth/",
      "sourcesContent": [
        "\nconst bcrypt = require(\"bcryptjs\"); //npm install bcryptjs --save\nconst jwt = require(\"jsonwebtoken\");\nconst { connection } = require('../config');\nimport app from '../app';\n\nlet auth = () => {\n\n    const isLoggedIn = async (req, res, next) => {\n\n        // \n        const token = req.body.token;\n        if (!token) next(new Error(\"Auth Error\"));\n\n        try {\n\n            const decoded = jwt.verify(token, \"randomString\");\n            const id = req.body.id;\n            if (id != decoded.id) next(new Error(\"Invalid Token1\"));\n\n            const statement = `SELECT id,username,token FROM users WHERE token=\"${token}\"`;\n            connection.query(statement, (err, result) => {\n                if (!result || !result[0].id || result[0].id != id) next(new Error(\"Invalid Token2\"));\n\n                req.id = decoded.id;\n                req.result = result;\n\n\n                next();\n            })\n\n        } catch (e) {\n            next(new Error(\"Invalid Token3\" + e.message));\n        }\n\n    }\n\n\n\n    const signupAction = async () => {\n        // check body data\n        app.post('/signup', async (req, res, nex) => {\n            const { firstname, lastname, username, phonenumber,address,birthdate, password } = req.body;\n\n            if (!username || !password) throw new Error(\"Email and password are required\");\n            try {\n                let selectStmt = `SELECT id, username, password FROM users WHERE username = \"${username}\"`;\n                //   let salt = await bcrypt.genSalt(10);\n                connection.query(selectStmt, async (err, result) => {\n                    if (result.length >= 1) throw new Error(\"User already exists\");\n                    let salt = await bcrypt.genSalt(10);\n                    let hashedPassword = await bcrypt.hash(password, salt);\n                    let insertStmt = 'INSERT INTO users (firstname, lastname, username, phonenumber,address,birthdate, password) VALUES (?,?,?,?,?, ?, ?)';\n\n                    connection.query(insertStmt, [firstname, lastname, username, phonenumber,address,birthdate, hashedPassword], (err, result) => {\n                        let id = result && result.insertId;\n\n                        let payload = { id: id };\n                        let token = jwt.sign(payload, \"randomString\", { expiresIn: 10000 });\n\n\n                        let obj = {\n                            'token': token\n                        }\n                        let query = 'update users SET ? where id=?';\n                        connection.query(query, [obj, id], (err, result) => {\n                            res.send({ id: id, token: token })\n\n                        })\n                    });\n\n                });\n            } catch (e) {\n                throw new Error(`couldn't create user ` + e.message);\n            }\n        })\n    }\n\n    // let id =result && result.id;\n    // let id = result ? result.id : 2;\n\n\n    const loginAction = async () => {\n        app.post('/login', async (req, res) => {\n            let { username, password } = req.body;\n            if (!username || !password) throw new Error(\"username and password are required\");\n            try {\n                let statement = `SELECT id, username, password FROM users WHERE username = \"${username}\"`;\n                connection.query(statement, async (err, result1) => {\n\n                    if (result1.length === 0) console.log(\"User not found\");\n                    // check the password\n                    let isMatch = await bcrypt.compare(password, result1[0].password);\n                    if (!isMatch) throw new Error(\"Incorrect Password !\");\n                    // generate token\n                    let payload = { id: result1[0].id };\n\n                    let token = jwt.sign(payload, \"randomString\", { expiresIn: 10000 });\n                    // add token to the user\n                    let obj = {\n                        'token': token\n                    }\n                    let query = 'update users SET ? where id=?';\n                    connection.query(query, [obj, result1[0].id], (err, result) => {\n\n                        res.send({ id: result1[0].id, token });\n                    })\n                })\n            } catch (e) {\n                throw new Error(`couldn't login user ` + e.message);\n\n            }\n        })\n    }\n\n    const logoutAction = async () => {\n        app.post('/logout', isLoggedIn, (req, res) => {\n            try {\n                let query = 'UPDATE users SET token = ? WHERE id = ?';\n                let obj = {\n                    'token': null\n                }\n                let id = req.id\n\n                connection.query(query, [obj, id], (err, result) => {\n                    res.send(\"logged out successfully\");\n                })\n            } catch (e) {\n                throw new Error(`couldn't logout user ` + e.message);\n            }\n        })\n    }\n\n    signupAction();\n    loginAction();\n    logoutAction();\n}\nmodule.exports = { auth }"
      ]
    },
    "sourceType": "script",
    "mtime": 1631863722528
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/baraaa/Desktop/Final Project/back/src/filee/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/baraaa/Desktop/Final Project/back\",\"filename\":\"/home/baraaa/Desktop/Final Project/back/src/filee/filee.jsx\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/baraaa/Desktop/Final Project/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.4": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/filee/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/baraaa/Desktop/Final Project/back",
      "filename": "/home/baraaa/Desktop/Final Project/back/src/filee/filee.jsx",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/baraaa/Desktop/Final Project/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFilename": "filee.jsx",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/baraaa/Desktop/Final Project/back/src/filee/filee.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/filee/",
        "sourceFileName": "filee.jsx",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar connection = require('../config');\n\nvar multer = require('multer');\n\nvar path = require(\"path\");\n\nvar fs = require('fs');\n\nvar testCRUD = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var upload, update, remove;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            upload = function upload() {\n              var multerStorage = multer.diskStorage({\n                destination: path.join(__dirname, '../../public/uploads'),\n                filename: function filename(req, file, cb) {\n                  var fieldname = file.fieldname,\n                      originalname = file.originalname;\n                  var date = Date.now(); // filename will be: image-1345923023436343-filename.png\n\n                  var filename = \"\".concat(fieldname, \"-\").concat(date, \"-\").concat(originalname);\n                  cb(null, filename);\n                }\n              });\n              var upload = multer({\n                storage: multerStorage\n              }); // CREATE image\n\n              _app[\"default\"].post('/test', upload.single('fileSrc'), /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n                  var obj, sql;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          obj = {\n                            'fileSrc': req.file && req.file.filename,\n                            'description': req.body.description\n                          };\n                          sql = 'INSERT INTO test SET ?';\n\n                          try {\n                            connection.con.query(sql, obj, function (err, result) {\n                              res.json(result);\n                            });\n                          } catch (e) {\n                            next(e);\n                          }\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x, _x2, _x3) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            };\n\n            update = function update() {\n              var multerStorage = multer.diskStorage({\n                destination: path.join(__dirname, '../../public/uploads'),\n                filename: function filename(req, file, cb) {\n                  var fieldname = file.fieldname,\n                      originalname = file.originalname;\n                  var date = Date.now(); // filename will be: image-1345923023436343-filename.png\n\n                  var filename = \"\".concat(fieldname, \"-\").concat(date, \"-\").concat(originalname);\n                  cb(null, filename);\n                }\n              });\n              var upload = multer({\n                storage: multerStorage\n              });\n\n              _app[\"default\"].put('/test/:id', upload.single('fileSrc'), function (req, res, next) {\n                var id = req.params.id;\n                var sql = 'select fileSrc from test where id=' + id;\n                var sql1 = \"update test SET ? where id=\" + id;\n\n                if (req.file) {\n                  connection.con.query(sql, function (err, result) {\n                    var a = 'public/uploads/' + result[0].fileSrc;\n                    fs.unlink(a, function (err) {\n                      if (err) {\n                        console.error(err);\n                        return;\n                      }\n                    });\n                  });\n                }\n\n                var obj = {};\n\n                if (req.file && !req.body.description) {\n                  obj = {\n                    'fileSrc': req.file && req.file.filename\n                  };\n                } else if (req.body && !req.file && req.body.description) {\n                  obj = {\n                    'description': req.body.description\n                  };\n                } else if (req.body && req.file && req.file.filename && req.body.description) {\n                  obj = {\n                    'fileSrc': req.file && req.file.filename,\n                    'description': req.body.description\n                  };\n                }\n\n                console.log(obj);\n                connection.con.query(sql1, obj, function (err, result) {\n                  res.send(result);\n                });\n              });\n            };\n\n            remove = function remove() {\n              _app[\"default\"][\"delete\"]('/test/:id', function (req, res) {\n                var id = req.params.id;\n                var sql = 'select fileSrc from test where id=' + id;\n                var sql1 = 'delete from test where id=' + id;\n                connection.con.query(sql, function (err, result) {\n                  var a = 'public/uploads/' + result[0].fileSrc; // let a='/home/fakher/CODI/SHRC/back/public/images/Screenshot from 2021-07-01 22-05-31.png'\n\n                  fs.unlink(a, function (err) {\n                    if (err) {\n                      console.error(err);\n                      return;\n                    } else {\n                      connection.con.query(sql1, function (err, result) {\n                        res.send({\n                          success: true\n                        });\n                      });\n                    }\n                  });\n                });\n              });\n            };\n\n            upload();\n            remove();\n            update();\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function testCRUD() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  testCRUD: testCRUD\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "filee.jsx"
      ],
      "names": [
        "connection",
        "require",
        "multer",
        "path",
        "fs",
        "testCRUD",
        "upload",
        "multerStorage",
        "diskStorage",
        "destination",
        "join",
        "__dirname",
        "filename",
        "req",
        "file",
        "cb",
        "fieldname",
        "originalname",
        "date",
        "Date",
        "now",
        "storage",
        "app",
        "post",
        "single",
        "res",
        "next",
        "obj",
        "body",
        "description",
        "sql",
        "con",
        "query",
        "err",
        "result",
        "json",
        "e",
        "update",
        "put",
        "id",
        "params",
        "sql1",
        "a",
        "fileSrc",
        "unlink",
        "console",
        "error",
        "log",
        "send",
        "remove",
        "success",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/filee/",
      "sourcesContent": [
        "import app from '../app'\nconst connection = require('../config');\nconst multer = require('multer');\nconst path = require(\"path\");\nconst fs = require('fs');\nconst testCRUD = async () => {\n\n\n    const upload = () => {\n        const multerStorage = multer.diskStorage({\n            destination: path.join(__dirname, '../../public/uploads'),\n            filename: (req, file, cb) => {\n                const { fieldname, originalname } = file;\n\n                const date = Date.now();\n                // filename will be: image-1345923023436343-filename.png\n                const filename = `${fieldname}-${date}-${originalname}`;\n                cb(null, filename);\n\n            }\n        })\n\n        const upload = multer({ storage: multerStorage })\n\n        // CREATE image\n        app.post('/test', upload.single('fileSrc'), async (req, res, next) => {\n\n            let obj = {\n                'fileSrc': req.file && req.file.filename,\n                'description': req.body.description\n            }\n\n            let sql = 'INSERT INTO test SET ?';\n            try {\n                connection.con.query(sql, obj, (err, result) => {\n                    res.json(result);\n                });\n            } catch (e) {\n                next(e)\n            }\n\n        })\n    }\n\n\n    const update = () => {\n\n        const multerStorage = multer.diskStorage({\n            destination: path.join(__dirname, '../../public/uploads'),\n            filename: (req, file, cb) => {\n                const { fieldname, originalname } = file;\n                const date = Date.now();\n                // filename will be: image-1345923023436343-filename.png\n                const filename = `${fieldname}-${date}-${originalname}`;\n                cb(null, filename);\n            }\n        })\n\n        const upload = multer({ storage: multerStorage })\n\n\n        app.put('/test/:id', upload.single('fileSrc'), (req, res, next) => {\n\n            let { id } = req.params;\n            let sql = 'select fileSrc from test where id=' + id\n            var sql1 = \"update test SET ? where id=\" + id;\n            if (req.file) {\n                connection.con.query(sql, (err, result) => {\n                    let a = 'public/uploads/' + result[0].fileSrc;\n\n                    fs.unlink(a, (err) => {\n                        if (err) {\n                            console.error(err)\n                            return\n                        }\n                    });\n                })\n            }\n            let obj = {};\n            if (req.file && !req.body.description) {\n                obj = {\n                    'fileSrc': req.file && req.file.filename\n                }\n            } else if (req.body && !req.file && req.body.description) {\n                obj = {\n                    'description': req.body.description\n                }\n            } else if (req.body && req.file && req.file.filename && req.body.description) {\n                obj = {\n                    'fileSrc': req.file && req.file.filename,\n                    'description': req.body.description\n                }\n            }\n            console.log(obj);\n\n\n            connection.con.query(sql1, obj, (err, result) => {\n                res.send(result)\n            })\n\n\n\n\n\n        })\n    }\n\n    const remove = () => {\n\n        app.delete('/test/:id', (req, res) => {\n\n            let { id } = req.params;\n            let sql = 'select fileSrc from test where id=' + id\n            let sql1 = 'delete from test where id=' + id;\n\n            connection.con.query(sql, (err, result) => {\n                let a = 'public/uploads/' + result[0].fileSrc;\n\n                // let a='/home/fakher/CODI/SHRC/back/public/images/Screenshot from 2021-07-01 22-05-31.png'\n                \n                fs.unlink(a, (err) => {\n                    if (err) {\n                        console.error(err)\n                        return\n                    } else {\n                        connection.con.query(sql1, (err, result) => {\n                            res.send({ success: true });\n                        })\n                    }\n\n\n                });\n\n            })\n\n        })\n\n    }\n\n    upload();\n    remove();\n    update();\n\n}\n\nmodule.exports = { testCRUD };"
      ]
    },
    "sourceType": "script",
    "mtime": 1632123595240
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/baraaa/Desktop/Final Project/back/src/filee/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/baraaa/Desktop/Final Project/back\",\"filename\":\"/home/baraaa/Desktop/Final Project/back/src/filee/filee.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/baraaa/Desktop/Final Project/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.4": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/filee/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/baraaa/Desktop/Final Project/back",
      "filename": "/home/baraaa/Desktop/Final Project/back/src/filee/filee.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/baraaa/Desktop/Final Project/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFilename": "filee.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/baraaa/Desktop/Final Project/back/src/filee/filee.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/filee/",
        "sourceFileName": "filee.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require('../config'),\n    connection = _require.connection;\n\nvar multer = require('multer');\n\nvar path = require(\"path\");\n\nvar fs = require('fs');\n\nvar testCRUD = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var upload, update, remove, getall;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            upload = function upload() {\n              var multerStorage = multer.diskStorage({\n                destination: path.join(__dirname, '../../public/uploads'),\n                filename: function filename(req, file, cb) {\n                  var fieldname = file.fieldname,\n                      originalname = file.originalname;\n                  var date = Date.now(); // filename will be: image-1345923023436343-filename.png\n\n                  var filename = \"\".concat(fieldname, \"-\").concat(date, \"-\").concat(originalname);\n                  cb(null, filename);\n                }\n              });\n              var upload = multer({\n                storage: multerStorage\n              }); // CREATE image\n\n              _app[\"default\"].post('/test', upload.single('fileSrc'), /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n                  var obj, sql;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          obj = {\n                            'fileSrc': req.file && req.file.filename,\n                            'description': req.body.description,\n                            'locationaddress': req.body.locationaddress,\n                            'pricestart': req.body.pricestart,\n                            \"id_user\": req.body.id_user\n                          };\n                          console.log(req.file.filename);\n                          sql = 'INSERT INTO post SET ?';\n\n                          try {\n                            connection.query(sql, obj, function (err, result) {\n                              res.json(result);\n                            });\n                          } catch (e) {\n                            next(e);\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x, _x2, _x3) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            };\n\n            update = function update() {\n              var multerStorage = multer.diskStorage({\n                destination: path.join(__dirname, '../../public/uploads'),\n                filename: function filename(req, file, cb) {\n                  var fieldname = file.fieldname,\n                      originalname = file.originalname;\n                  var date = Date.now(); // filename will be: image-1345923023436343-filename.png\n\n                  var filename = \"\".concat(fieldname, \"-\").concat(date, \"-\").concat(originalname);\n                  cb(null, filename);\n                }\n              });\n              var upload = multer({\n                storage: multerStorage\n              });\n\n              _app[\"default\"].put('/test/:id', upload.single('fileSrc'), function (req, res, next) {\n                var id = req.params.id;\n                var sql = 'select fileSrc from post where id=' + id;\n                var sql1 = \"update post SET ? where id=\" + id;\n\n                if (req.file) {\n                  connection.query(sql, function (err, result) {\n                    var a = 'public/uploads/' + result[0].fileSrc;\n                    fs.unlink(a, function (err) {\n                      if (err) {\n                        console.error(err);\n                        return;\n                      }\n                    });\n                  });\n                }\n\n                var obj = {};\n\n                if (req.file && !req.body.description) {\n                  obj = {\n                    'fileSrc': req.file && req.file.filename\n                  };\n                } else if (req.body && !req.file && req.body.description) {\n                  obj = {\n                    'description': req.body.description\n                  };\n                } else if (req.body && req.file && req.file.filename && req.body.description) {\n                  obj = {\n                    'fileSrc': req.file && req.file.filename,\n                    'description': req.body.description\n                  };\n                }\n\n                console.log(obj);\n                connection.query(sql1, obj, function (err, result) {\n                  res.send(result);\n                });\n              });\n            };\n\n            remove = function remove() {\n              _app[\"default\"][\"delete\"]('/test/:id', function (req, res) {\n                var id = req.params.id;\n                var sql = 'select fileSrc from post where id=' + id;\n                var sql1 = 'delete from post where id=' + id;\n                connection.query(sql, function (err, result) {\n                  var a = 'public/uploads/' + result[0].fileSrc; // let a='/home/fakher/CODI/SHRC/back/public/images/Screenshot from 2021-07-01 22-05-31.png'\n\n                  fs.unlink(a, function (err) {\n                    if (err) {\n                      console.error(err);\n                      return;\n                    } else {\n                      connection.con.query(sql1, function (err, result) {\n                        res.send({\n                          success: true\n                        });\n                      });\n                    }\n                  });\n                });\n              });\n            };\n\n            getall = function getall() {\n              _app[\"default\"].get('/allpost', /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n                  var sql;\n                  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          try {\n                            sql = \"SELECT * FROM post\";\n                            connection.query(sql, function (err, result) {\n                              if (err) throw err;\n                              res.json({\n                                success: true,\n                                result: result\n                              });\n                            });\n                          } catch (e) {\n                            next(e);\n                          }\n\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x4, _x5, _x6) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n            };\n\n            upload();\n            remove();\n            update();\n            getall();\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function testCRUD() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  testCRUD: testCRUD\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "filee.js"
      ],
      "names": [
        "require",
        "connection",
        "multer",
        "path",
        "fs",
        "testCRUD",
        "upload",
        "multerStorage",
        "diskStorage",
        "destination",
        "join",
        "__dirname",
        "filename",
        "req",
        "file",
        "cb",
        "fieldname",
        "originalname",
        "date",
        "Date",
        "now",
        "storage",
        "app",
        "post",
        "single",
        "res",
        "next",
        "obj",
        "body",
        "description",
        "locationaddress",
        "pricestart",
        "id_user",
        "console",
        "log",
        "sql",
        "query",
        "err",
        "result",
        "json",
        "e",
        "update",
        "put",
        "id",
        "params",
        "sql1",
        "a",
        "fileSrc",
        "unlink",
        "error",
        "send",
        "remove",
        "con",
        "success",
        "getall",
        "get",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/baraaa/Desktop/Final Project/back/src/filee/",
      "sourcesContent": [
        "import app from '../app'\nconst {connection} = require('../config');\nconst multer = require('multer');\nconst path = require(\"path\");\nconst fs = require('fs');\nconst testCRUD = async () => {\n\n\n    const upload = () => {\n        const multerStorage = multer.diskStorage({\n            destination: path.join(__dirname, '../../public/uploads'),\n            filename: (req, file, cb) => {\n                const { fieldname, originalname } = file;\n\n                const date = Date.now();\n                // filename will be: image-1345923023436343-filename.png\n                const filename = `${fieldname}-${date}-${originalname}`;\n                cb(null, filename);\n\n            }\n        })\n\n        const upload = multer({ storage: multerStorage })\n\n        // CREATE image\n        app.post('/test', upload.single('fileSrc'), async (req, res, next) => {\n\n            let obj = {\n                'fileSrc': req.file && req.file.filename,\n                'description': req.body.description,\n                'locationaddress' : req.body.locationaddress,\n                'pricestart' : req.body.pricestart,\n                \"id_user\":req.body.id_user\n            }\nconsole.log(req.file.filename);\n            let sql = 'INSERT INTO post SET ?';\n            try {\n                connection.query(sql, obj, (err, result) => {\n                 \n              \n                    res.json(result);\n                });\n            } catch (e) {\n                next(e)\n            }\n\n        })\n    }\n\n\n    const update = () => {\n\n        const multerStorage = multer.diskStorage({\n            destination: path.join(__dirname, '../../public/uploads'),\n            filename: (req, file, cb) => {\n                const { fieldname, originalname } = file;\n                const date = Date.now();\n                // filename will be: image-1345923023436343-filename.png\n                const filename = `${fieldname}-${date}-${originalname}`;\n                cb(null, filename);\n            }\n        })\n\n        const upload = multer({ storage: multerStorage })\n\n\n        app.put('/test/:id', upload.single('fileSrc'), (req, res, next) => {\n\n            let { id } = req.params;\n            let sql = 'select fileSrc from post where id=' + id\n            var sql1 = \"update post SET ? where id=\" + id;\n            if (req.file) {\n                connection.query(sql, (err, result) => {\n                    let a = 'public/uploads/' + result[0].fileSrc;\n\n                    fs.unlink(a, (err) => {\n                        if (err) {\n                            console.error(err)\n                            return\n                        }\n                    });\n                })\n            }\n            let obj = {};\n            if (req.file && !req.body.description) {\n                obj = {\n                    'fileSrc': req.file && req.file.filename\n                }\n            } else if (req.body && !req.file && req.body.description) {\n                obj = {\n                    'description': req.body.description\n                }\n            } else if (req.body && req.file && req.file.filename && req.body.description) {\n                obj = {\n                    'fileSrc': req.file && req.file.filename,\n                    'description': req.body.description\n                }\n            }\n            console.log(obj);\n\n\n            connection.query(sql1, obj, (err, result) => {\n                res.send(result)\n            })\n\n\n\n\n\n        })\n    }\n\n    const remove = () => {\n\n        app.delete('/test/:id', (req, res) => {\n\n            let { id } = req.params;\n            let sql = 'select fileSrc from post where id=' + id\n            let sql1 = 'delete from post where id=' + id;\n\n            connection.query(sql, (err, result) => {\n                let a = 'public/uploads/' + result[0].fileSrc;\n\n                // let a='/home/fakher/CODI/SHRC/back/public/images/Screenshot from 2021-07-01 22-05-31.png'\n                \n                fs.unlink(a, (err) => {\n                    if (err) {\n                        console.error(err)\n                        return\n                    } else {\n                        connection.con.query(sql1, (err, result) => {\n                            res.send({ success: true });\n                        })\n                    }\n\n\n                });\n\n            })\n\n        })\n\n    }\n\nconst getall = () =>{\n\n    app.get('/allpost', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM post`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n}\n   \n\n    upload();\n    remove();\n    update();\n    getall();\n\n}\n\nmodule.exports = { testCRUD };"
      ]
    },
    "sourceType": "script",
    "mtime": 1632131778044
  }
}